apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: grafana
          image: grafana/grafana:latest
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi
          #   limits:
          #     cpu: 100m
          #     memory: 100Mi
          # livenessProbe:
          #   tcpSocket:
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 2
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          # env:
          #   - name: DB_HOST
          #     valueFrom:
          #       configMapKeyRef:
          #         name: grafana
          #         key: DB_HOST
          ports:
            - containerPort: 3000
              name: grafana
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          emptyDir: {}
      restartPolicy: Always
